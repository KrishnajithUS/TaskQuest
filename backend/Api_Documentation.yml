openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/listview/:
    get:
      operationId: listApps
      description: 'Listing All the Apps'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
          description: ''
      tags:
      - api
  /api/taskview/:
    get:
      operationId: TaskView
      description: 'To view all the completed Task by each user'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
          description: ''
      tags:
      - api
  /api/totalpoints/:
    get:
      operationId: listTotalPoints
      description: 'To get Total points of individual User'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/registerview/:
    post:
      operationId: createUser
      description: 'To Register a User'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
      tags:
      - api
  /api/loginview/:
    post:
      operationId: createAuthToken
      description: 'Used for login the User and Provide Token'
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api
  /api/createview/:
    post:
      operationId: createApp
      description: 'For creating the App'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/App'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: ''
      tags:
      - api
  /api/addappview/:
    post:
      operationId: createAddApp
      description: 'Used to keep track of User and their corresponding Apps'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/logout/:
    post:
      operationId: createLogOut
      description: 'logging out the User'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    App:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        link:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        category:
          type: string
          maxLength: 50
        image:
          type: string
          format: binary
          nullable: true
        sub_category:
          type: string
          maxLength: 50
        points:
          type: integer
          nullable: true
        creator:
          type: integer
      required:
      - name
      - link
      - category
      - sub_category
    Registration:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        first_name:
          type: string
          maxLength: 200
        last_name:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 128
      required:
      - email
      - first_name
      - last_name
      - password
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
